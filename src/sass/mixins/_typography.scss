@use "tokens.web" as tokens;

/**
 * Typography helpers.
 * Those with `font-feature-settings` only work if the font being used has
 * support for the specific feature, otherwise it won't work.
 */

// Heading
@mixin heading {
	font-family: tokens.$font-header;
	font-weight: 900;
}

// Tabulated or fixed width numerals
@mixin tabulated-figures {
	font-variant-numeric: tabular-nums;
	font-feature-settings: "tnum";
}

// Oldstyle figures
@mixin oldstyle-figures {
	font-variant-numeric: oldstyle-nums;
	font-feature-settings: "onum";
}

// Non-tabulated lining figures
@mixin modern-figures {
	font-feature-settings: "onum" 0, "tnum" 0;
}

// Use font's all-caps kerning for all caps text
@mixin all-caps {
	text-transform: uppercase;
	font-feature-settings: "cpsp", "onum" 0, "tnum" 0;
	letter-spacing: 0.05em;
}

// Small caps (nice for acronyms)
@mixin small-caps {
	font-variant: small-caps;
	font-feature-settings: "c2sc", "smcp";
}

// Antialias text
@mixin antialiasing {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

// Overflow text
@mixin overflow-text {
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}

// Hide copy (for image replacement)
@mixin hide-text {
	text-indent: 110%;
	white-space: nowrap;
	overflow: hidden;
}

// Force long words to break across lines
@mixin force-wrap {
	overflow-wrap: break-word;
	word-wrap: break-word;
	word-break: break-word;
}

// Responsive font sizing
@mixin responsive-size($size, $min: false, $max: false) {
	// HT: https://css-tricks.com/snippets/sass/viewport-sized-typography-minimum-maximum-sizes/
	$sizeUnitless: $size / ($size - $size + 1);
	$dimension: if(unit($size) == "vh", "height", "width");
	$breakpointMin: $min / $sizeUnitless * 100;
	@media (max-#{$dimension}: #{$breakpointMin}) {
		font-size: $min;
	}
	@if $max {
		$breakpointMax: $max / $sizeUnitless * 100;
		@media (min-#{$dimension}: #{$breakpointMax}) {
			font-size: $max;
		}
	}
	font-size: $size;
}
