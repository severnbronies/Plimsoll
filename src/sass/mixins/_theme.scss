@use "tokens.web" as tokens;
@use "mixins/a11y";
@use "mixins/media";

@mixin default-link--initial(
	$textColor: currentColor,
	$highlightColor: currentColor
) {
	color: $textColor;
	text-decoration: none;
	box-shadow: inset 0 -0.15em 0 0 $highlightColor;
	transition: box-shadow 0.125s linear;
}

@mixin default-link--active(
	$textColor: currentColor,
	$highlightColor: currentColor
) {
	color: $textColor;
	box-shadow: inset 0 -0.5em 0 0 $highlightColor;
}

@mixin default-link(
	$textColor: currentColor,
	$highlightColor: tokens.$color-primary-light
) {
	@include default-link--initial($textColor, $highlightColor);
	&:hover {
		@include default-link--active($textColor, $highlightColor);
	}
	&:focus {
		@include a11y.focus-ring;
	}
}

@mixin extend-link {
	&::after {
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
	}
}

@mixin triangle($size: 0.76em, $color: currentColor) {
	display: inline-block;
	width: $size;
	height: $size;
	background-color: $color;
	clip-path: polygon(0 0, 100% 50%, 0 100%);
}

@mixin highlight($color) {
	background-color: $color;
	box-shadow: 0.25em 0 0 0 $color, -0.25em 0 0 0 $color;
	box-decoration-break: clone;
}

@mixin shade(
	$color: var(--theme-accent-mod),
	$size: 0.25rem,
	$direction: "vertical"
) {
	@if $direction == "horizontal" {
		background: linear-gradient(135deg, $color 25%, transparent 25%)
				(0 - $size / 2)
				0,
			linear-gradient(225deg, $color 25%, transparent 25%) (0 - $size / 2) 0,
			linear-gradient(315deg, $color 25%, transparent 25%),
			linear-gradient(45deg, $color 25%, transparent 25%);
	} @else {
		background: linear-gradient(225deg, $color 25%, transparent 25%)
				(0 - $size / 2)
				0,
			linear-gradient(135deg, $color 25%, transparent 25%)
				(0 - $size / 2)
				(0 - $size / 2),
			linear-gradient(45deg, $color 25%, transparent 25%)
				(0 - $size / 2)
				(0 - $size / 2),
			linear-gradient(-45deg, $color 25%, transparent 25%) (0 - $size / 2) 0;
	}
	background-size: $size $size;
}
